# ci_cd_pipeline.yaml: Sample CI/CD pipeline configuration using GitLab CI/CD

stages:
  - test
  - build
  - security_scan
  - performance_scan
  - deploy

variables:
  DOCKER_IMAGE: skyoptima:latest

test_job:
  stage: test
  script:
    - echo "Running unit and integration tests..."
    - pytest --maxfail=1 --disable-warnings -q
  artifacts:
    paths:
      - reports/

build_job:
  stage: build
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_IMAGE -f deploy/Dockerfile .
  artifacts:
    paths:
      - image.tar

security_scan:
  stage: security_scan
  script:
    - echo "Running security scans..."
    - docker run --rm -v $(pwd):/app aquasec/trivy:latest image $DOCKER_IMAGE
  artifacts:
    paths:
      - security_reports/

performance_scan:
  stage: performance_scan
  script:
    - echo "Running performance tests..."
    - pytest --maxfail=1 --disable-warnings -q tests/test_performance.py
  artifacts:
    paths:
      - performance_reports/

deploy_job:
  stage: deploy
  script:
    - echo "Deploying to Kubernetes..."
    - kubectl apply -f deploy/k8s_deployment.yaml
  only:
    - main
